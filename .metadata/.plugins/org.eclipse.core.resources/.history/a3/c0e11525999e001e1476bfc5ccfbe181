package ej_data_udp;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;

public class Cliente {

    public static void main(String[] args) throws IOException {
        // Obtenemos la direcci贸n del servidor
        InetAddress direccionServidor = InetAddress.getByName("localhost");

        // Creamos el socket UDP
        DatagramSocket socket = new DatagramSocket();

        // Formateamos la fecha y hora actual
       // SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        
        Scanner sc = new Scanner(System.in);
        System.out.println("Ingresi el format, per exemple : dd-MM-yyyy HH:mm:ss. Deixa-ho buid per a escriure aquesta opci贸");
        String f = sc.next();
        
        SimpleDateFormat sdf ;
        switch(f) {
        case ""->  sdf = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        default -> sdf = new SimpleDateFormat(f);
        }
        
        Date fechaHoraActual = new Date();
        String fechaHoraFormateada = sdf.format(fechaHoraActual);

        // Creamos el datagrama con la petici贸n
        byte[] peticion = fechaHoraFormateada.getBytes();
        DatagramPacket peticionDatagrama = new DatagramPacket(peticion, peticion.length, direccionServidor, 8100);

        // Enviamos la petici贸n al servidor
        socket.send(peticionDatagrama);

        // Recibimos la respuesta del servidor
        byte[] respuesta = new byte[1024];
        DatagramPacket respuestaDatagrama = new DatagramPacket(respuesta, respuesta.length);
        socket.receive(respuestaDatagrama);

        // Mostramos la respuesta
        System.out.println("fecha_UDP> " + new String(respuestaDatagrama.getData(), 0, respuestaDatagrama.getLength()));
    }
}

