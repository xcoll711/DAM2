/**
 * The ViewClient class represents the graphical user interface for the client application.
 */
package view;

import java.awt.*;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.awt.event.MouseMotionListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;

import controller.RoundedPanel;
import controller.RoundedProgressBar;
import model.Functions;

/**
 * The ViewClient class handles the GUI components and layout for the client application.
 */
public class ViewClient {

	//GLOBAL VARIABLES
    public static JFrame frameClient;
    public static SpringLayout sl_panelControlsMid;
    
    public static JPanel panel;
    public static JPanel panelControlsMid;
    
    public static JButton btnConfig;
    public static JButton btnMinimizar;
    public static JButton btnVentana;
    public static JButton btnCerrar;
    
    public static JLabel lblInici;
    public static JLabel lblCerca;
    public static JLabel lblBiblioteca;
    
    public static JButton btnRepro;
    public static JButton btnSkipB;
    public static JButton btnPlayPause;
    public static JButton btnSkipF;
    public static JButton btnLoop;
    
    public static JLabel lblUsername;
    
    public static JButton btnFullScrSong;
    public static RoundedProgressBar pbVolume;
    public static JButton btnVolume;
    public static JButton btnDevice;
    public static JButton btnQueue;
    public static JButton btnLyrics;
    public static JButton btnNowPlaying;

/***/
    public final static int ARCWIDHT = 15; 
	public final static int ARCHEIGHT = 15;


    private Point mouseDownCompCoords = null;

    public static void runClient() {
        EventQueue.invokeLater(() -> {
            try {
                ViewClient window = new ViewClient();
                window.frameClient.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    public ViewClient() {
        initialize();
    }

    private void initialize() {
        frameClient = new JFrame();
        frameClient.setResizable(false);
        frameClient.setIconImage(Toolkit.getDefaultToolkit().getImage(ViewClient.class.getResource("/view/avis1.png")));
        frameClient.setBounds(100, 100, 1600, 900);
        frameClient.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frameClient.setUndecorated(true);

        frameClient.getContentPane().setBackground(new Color(0, 0, 0));
        frameClient.getContentPane().setLayout(new BorderLayout(0, 0));
        ((JComponent) frameClient.getContentPane()).setBorder(new EmptyBorder(5, 5, 5, 5));

        frameClient.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                mouseDownCompCoords = e.getPoint();
            }
        });

        frameClient.addMouseMotionListener((MouseMotionListener) new MouseMotionAdapter() {
            public void mouseDragged(MouseEvent e) {
                Point currCoords = e.getLocationOnScreen();
                frameClient.setLocation(currCoords.x - mouseDownCompCoords.x, currCoords.y - mouseDownCompCoords.y);
            }
        });

        // Agrega un listener para cambiar el tamaño estirando los laterales
        frameClient.addComponentListener((ComponentListener) new ComponentAdapter() {
            public void componentResized(ComponentEvent e) {
                // Puedes realizar acciones adicionales después de cambiar el tamaño si es necesario
            }
        });


        frameClient.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frameClient.setVisible(true);
        
        // Top panel
        JPanel panelTop = new JPanel();
        panelTop.setLayout(new BorderLayout());
        panelTop.setBackground(new Color(0, 0, 0));
        frameClient.getContentPane().add(panelTop, BorderLayout.NORTH);

        // Config button
		btnConfig = new JButton("  ● ● ●  ");
		btnConfig.setFocusable(false);
		btnConfig.setFocusTraversalKeysEnabled(false);
		btnConfig.setFocusPainted(false);
		btnConfig.setActionCommand("    ● ● ●    ");
		btnConfig.setFont(new Font("Tahoma", Font.PLAIN, 10));
		btnConfig.setBorderPainted(false);
		btnConfig.setBackground(new Color(0, 0, 0));
		btnConfig.setForeground(new Color(255, 255, 255));
		panelTop.add(btnConfig, BorderLayout.WEST);


		// Add the other buttons to the right
		JPanel rightButtonsPanel = new JPanel();
		rightButtonsPanel.setLayout(new GridLayout(1, 3)); // Use GridLayout to evenly distribute buttons vertically
		rightButtonsPanel.setBackground(new Color(0, 0, 0));
		panelTop.add(rightButtonsPanel, BorderLayout.EAST);

		btnMinimizar = new JButton("");
		btnMinimizar.setIcon(new ImageIcon(ViewClient.class.getResource("/view/w_minimize.png")));

		btnMinimizar.setFocusPainted(false);
		configureButton(btnMinimizar);
		rightButtonsPanel.add(btnMinimizar);

		btnVentana = new JButton("");
		
		btnVentana.setIcon(new ImageIcon(ViewClient.class.getResource("/view/w_fullscreen.png")));
		btnVentana.setFocusPainted(false);
		btnVentana.setFocusTraversalKeysEnabled(false);
		configureButton(btnVentana);
		rightButtonsPanel.add(btnVentana);

		btnCerrar = new JButton("");
		btnCerrar.setIcon(new ImageIcon(ViewClient.class.getResource("/view/w_x.png")));
		btnCerrar.setFont(new Font("Arial", Font.PLAIN, 12));
		configureButton(btnCerrar);
		rightButtonsPanel.add(btnCerrar);


		/**
		 * MID
		 */
		JPanel panelMid = new JPanel();
		panelMid.setPreferredSize(new Dimension(430, 10));
		panelMid.setBackground(new Color(0, 0, 0));
		frameClient.getContentPane().add(panelMid, BorderLayout.CENTER);
		SpringLayout sl_panelMid = new SpringLayout();
		panelMid.setLayout(sl_panelMid);

		panel = new RoundedPanel(20);
		sl_panelMid.putConstraint(SpringLayout.NORTH, panel, 10, SpringLayout.NORTH, panelMid);
		sl_panelMid.putConstraint(SpringLayout.WEST, panel, 0, SpringLayout.WEST, panelMid);
		sl_panelMid.putConstraint(SpringLayout.SOUTH, panel, -12, SpringLayout.SOUTH, panelMid);
		sl_panelMid.putConstraint(SpringLayout.EAST, panel, 0, SpringLayout.EAST, panelMid);
		panel.setBackground(new Color(36, 36, 36));
		panelMid.add(panel);
		panel.setLayout(new CardLayout(0, 0));

		   // Create and add your panels to the CardLayout
        JPanel panelInici = new RoundedPanel(20);// Replace this with your actual panel for "Inici"
        panelInici.setForeground(new Color(16, 16, 16));
        panelInici.setBackground(new Color(18, 17, 16));
        panel.add(panelInici, "Inici");
        SpringLayout sl_panelInici = new SpringLayout();
        panelInici.setLayout(sl_panelInici);
        
        JPanel panelMenuMusica= new RoundedPanel(20);
        sl_panelInici.putConstraint(SpringLayout.NORTH, panelMenuMusica, 0, SpringLayout.NORTH, panelInici);
        sl_panelInici.putConstraint(SpringLayout.WEST, panelMenuMusica, 0, SpringLayout.WEST, panelInici);
        sl_panelInici.putConstraint(SpringLayout.SOUTH, panelMenuMusica, 50, SpringLayout.NORTH, panelInici);
        sl_panelInici.putConstraint(SpringLayout.EAST, panelMenuMusica, 0, SpringLayout.EAST, panelInici);
        panelMenuMusica.setBackground(null);
        panelInici.add(panelMenuMusica);
        
      
        SpringLayout sl_panelMenuMusica = new SpringLayout();
        panelMenuMusica.setLayout(sl_panelMenuMusica);
        
        JPanel panelUserIMG = new RoundedPanel(90);

     //   panel_imagen.setBackground(null);
        panelUserIMG.setPreferredSize(new Dimension(30, 30));
        sl_panelMenuMusica.putConstraint(SpringLayout.NORTH, panelUserIMG, 10, SpringLayout.NORTH, panelMenuMusica);

        sl_panelMenuMusica.putConstraint(SpringLayout.SOUTH, panelUserIMG, 40, SpringLayout.NORTH, panelMenuMusica);
        sl_panelMenuMusica.putConstraint(SpringLayout.EAST, panelUserIMG, -10, SpringLayout.EAST, panelMenuMusica);
        panelMenuMusica.add(panelUserIMG);
        
        lblUsername = new JLabel("User");
        sl_panelMenuMusica.putConstraint(SpringLayout.NORTH, lblUsername, 0, SpringLayout.NORTH, panelUserIMG);
        sl_panelMenuMusica.putConstraint(SpringLayout.WEST, lblUsername, -119, SpringLayout.WEST, panelUserIMG);
        sl_panelMenuMusica.putConstraint(SpringLayout.SOUTH, lblUsername, 0, SpringLayout.SOUTH, panelUserIMG);
        sl_panelMenuMusica.putConstraint(SpringLayout.EAST, lblUsername, -18, SpringLayout.WEST, panelUserIMG);
        lblUsername.setHorizontalAlignment(SwingConstants.RIGHT);
        lblUsername.setForeground(new Color(255, 255, 255));
        panelMenuMusica.add(lblUsername);
        
        JPanel panelMusica = new JPanel();
        panelMusica.setLayout(new BoxLayout(panelMusica, BoxLayout.X_AXIS)); // Cambio a layout horizontal
        panelMusica.setBackground(null);

        // Añadir los paneles al contenedor
        Functions.agregarPanel(panelMusica);
        Functions.agregarPanel(panelMusica);
        Functions.agregarPanel(panelMusica);
        Functions.agregarPanel(panelMusica);
        Functions.agregarPanel(panelMusica);
        Functions.agregarPanel(panelMusica);
        Functions.agregarPanel(panelMusica);


        // Crear JScrollPane y añadir el panelMusica
        JScrollPane scrollPane = new JScrollPane(panelMusica);
        sl_panelInici.putConstraint(SpringLayout.NORTH, scrollPane, 0, SpringLayout.SOUTH, panelMenuMusica);
        scrollPane.setBounds(new Rectangle(0, 0, 1000, 1000));
        panelInici.add(scrollPane);

     

        JPanel panelCerca = new RoundedPanel(20);
        panelCerca.setBackground(Color.GREEN);
        panel.add(panelCerca, "Cerca");

		/**
		 * WEST
		 */
		JPanel panelWest = new JPanel();
		panelWest.setPreferredSize(new Dimension(430, 10));
		panelWest.setBackground(new Color(0, 0, 0));
		frameClient.getContentPane().add(panelWest, BorderLayout.WEST);
		SpringLayout sl_panelWest = new SpringLayout();
		panelWest.setLayout(sl_panelWest);

		JPanel panelOptions = new RoundedPanel(20); 
		panelOptions.setBorder(null);
		sl_panelWest.putConstraint(SpringLayout.NORTH, panelOptions, 10, SpringLayout.NORTH, panelWest);
		sl_panelWest.putConstraint(SpringLayout.WEST, panelOptions, 10, SpringLayout.WEST, panelWest);
		sl_panelWest.putConstraint(SpringLayout.EAST, panelOptions, 420, SpringLayout.WEST, panelWest);
		panelOptions.setBackground(new Color(16, 16, 16));
		panelWest.add(panelOptions);




		JPanel panelLibrary = new RoundedPanel(20);
		sl_panelWest.putConstraint(SpringLayout.SOUTH, panelOptions, -12, SpringLayout.NORTH, panelLibrary);
		sl_panelWest.putConstraint(SpringLayout.NORTH, panelLibrary, 151, SpringLayout.NORTH, panelWest);
		sl_panelWest.putConstraint(SpringLayout.SOUTH, panelLibrary, -10, SpringLayout.SOUTH, panelWest);
		panelLibrary.setBorder(null);
		SpringLayout sl_panelOptions = new SpringLayout();
		panelOptions.setLayout(sl_panelOptions);

		lblInici = new JLabel("");
		sl_panelOptions.putConstraint(SpringLayout.NORTH, lblInici, 5, SpringLayout.NORTH, panelOptions);
		sl_panelOptions.putConstraint(SpringLayout.WEST, lblInici, 20, SpringLayout.WEST, panelOptions);
		sl_panelOptions.putConstraint(SpringLayout.EAST, lblInici, -10, SpringLayout.EAST, panelOptions);
		lblInici.setIcon(new ImageIcon(ViewClient.class.getResource("/view/inici1.png")));
		panelOptions.add(lblInici);

		lblCerca = new JLabel("");
		sl_panelOptions.putConstraint(SpringLayout.NORTH, lblCerca, 44, SpringLayout.NORTH, lblInici);
		sl_panelOptions.putConstraint(SpringLayout.SOUTH, lblCerca, 5, SpringLayout.SOUTH, panelOptions);
		sl_panelOptions.putConstraint(SpringLayout.SOUTH, lblInici, -65, SpringLayout.SOUTH, lblCerca);
		sl_panelOptions.putConstraint(SpringLayout.WEST, lblCerca, 20, SpringLayout.WEST, panelOptions);
		sl_panelOptions.putConstraint(SpringLayout.EAST, lblCerca, 0, SpringLayout.EAST, lblInici);
		lblCerca.setIcon(new ImageIcon(ViewClient.class.getResource("/view/cerca2.png")));
		panelOptions.add(lblCerca);
		sl_panelWest.putConstraint(SpringLayout.WEST, panelLibrary, 10, SpringLayout.WEST, panelWest);
		sl_panelWest.putConstraint(SpringLayout.EAST, panelLibrary, -10, SpringLayout.EAST, panelWest);
		panelLibrary.setBackground(new Color(16, 16, 16));
		panelWest.add(panelLibrary);
		SpringLayout sl_panelLibrary = new SpringLayout();
		panelLibrary.setLayout(sl_panelLibrary);

		lblBiblioteca = new JLabel("");
		sl_panelLibrary.putConstraint(SpringLayout.NORTH, lblBiblioteca, 0, SpringLayout.NORTH, panelLibrary);
		sl_panelLibrary.putConstraint(SpringLayout.WEST, lblBiblioteca, 10, SpringLayout.WEST, panelLibrary);
		sl_panelLibrary.putConstraint(SpringLayout.SOUTH, lblBiblioteca, 73, SpringLayout.NORTH, panelLibrary);
		sl_panelLibrary.putConstraint(SpringLayout.EAST, lblBiblioteca, -67, SpringLayout.EAST, panelLibrary);
		lblBiblioteca.setIcon(new ImageIcon(ViewClient.class.getResource("/view/biblioteca2.png")));
		panelLibrary.add(lblBiblioteca);

		/**
		 * EAST
		 */
		JPanel panelEast = new JPanel();
		panelEast.setBackground(new Color(0, 0, 0));
		FlowLayout fl_panelEast = (FlowLayout) panelEast.getLayout();
		fl_panelEast.setAlignment(FlowLayout.RIGHT);
		frameClient.getContentPane().add(panelEast, BorderLayout.EAST);

		/**
		 * BOT
		 */
		JPanel panelBot = new JPanel();
		panelBot.setBackground(new Color(0, 0, 0));
		frameClient.getContentPane().add(panelBot, BorderLayout.SOUTH);
		panelBot.setLayout(new BorderLayout(0, 0));

		panelControlsMid = new JPanel();
		panelControlsMid.setPreferredSize(new Dimension(10, 80));
		panelControlsMid.setBackground(new Color(0, 0, 0));
		panelBot.add(panelControlsMid, BorderLayout.CENTER);
		sl_panelControlsMid = new SpringLayout();
		panelControlsMid.setLayout(sl_panelControlsMid);

		
		Dimension size = frameClient.getSize();
		int halfWidth = size.width / 2;

		btnPlayPause = new JButton("");
		sl_panelControlsMid.putConstraint(SpringLayout.NORTH, btnPlayPause, 0, SpringLayout.NORTH, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.WEST, btnPlayPause, halfWidth, SpringLayout.WEST, panelControlsMid);
		btnPlayPause.setIcon(new ImageIcon(ViewClient.class.getResource("/view/playpause1.png")));
		btnPlayPause.setBorderPainted(false);
		btnPlayPause.setBackground(new Color(0, 0, 0));
		panelControlsMid.add(btnPlayPause);
		
		
		btnSkipB = new JButton("");
		sl_panelControlsMid.putConstraint(SpringLayout.NORTH, btnSkipB, 10, SpringLayout.NORTH, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.EAST, btnSkipB, 0, SpringLayout.WEST, btnPlayPause);
		btnSkipB.setContentAreaFilled(false);
		btnSkipB.setBorderPainted(false);

		// Load the original image
		ImageIcon originalIcon = new ImageIcon(ViewClient.class.getResource("/view/skip1.png"));

		// Rotate the image by 180 degrees
		ImageIcon rotatedIcon = rotateImage(originalIcon.getImage(), Math.PI);

		btnSkipB.setIcon(rotatedIcon);
		btnSkipB.setFocusTraversalKeysEnabled(false);
		btnSkipB.setFocusPainted(false);
		btnSkipB.setBackground(new Color(0, 0, 0));
		panelControlsMid.add(btnSkipB);
		

		btnSkipF = new JButton("");
		sl_panelControlsMid.putConstraint(SpringLayout.NORTH, btnSkipF, 10, SpringLayout.NORTH, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.WEST, btnSkipF, 0, SpringLayout.EAST, btnPlayPause);
		btnSkipF.setIcon(new ImageIcon(ViewClient.class.getResource("/view/skip1.png")));
		btnSkipF.setFocusTraversalKeysEnabled(false);
		btnSkipF.setFocusPainted(false);
		btnSkipF.setContentAreaFilled(false);
		btnSkipF.setBorderPainted(false);
		btnSkipF.setBackground(Color.BLACK);
		panelControlsMid.add(btnSkipF);
		
		btnRepro = new JButton("");
		sl_panelControlsMid.putConstraint(SpringLayout.NORTH, btnRepro, 10, SpringLayout.NORTH, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.EAST, btnRepro, 0, SpringLayout.WEST, btnSkipB);
		btnRepro.setIcon(new ImageIcon(ViewClient.class.getResource("/view/repro1.png")));
		btnRepro.setBackground(new Color(0, 0, 0));
		btnRepro.setBorderPainted(false);
		panelControlsMid.add(btnRepro);

		btnLoop = new JButton("");
		sl_panelControlsMid.putConstraint(SpringLayout.NORTH, btnLoop, 10, SpringLayout.NORTH, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.WEST, btnLoop, 0, SpringLayout.EAST, btnSkipF);
		btnLoop.setIcon(new ImageIcon(ViewClient.class.getResource("/view/loop1.png")));
		btnLoop.setFocusTraversalKeysEnabled(false);
		btnLoop.setFocusPainted(false);
		btnLoop.setContentAreaFilled(false);
		btnLoop.setBorderPainted(false);
		btnLoop.setBackground(Color.BLACK);
		panelControlsMid.add(btnLoop);
		
		btnFullScrSong = new JButton("");
		sl_panelControlsMid.putConstraint(SpringLayout.NORTH, btnFullScrSong, 10, SpringLayout.NORTH, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.WEST,  btnFullScrSong, -35, SpringLayout.EAST, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.EAST, btnFullScrSong, 0, SpringLayout.EAST, panelControlsMid);
		btnFullScrSong.setIcon(new ImageIcon(ViewClient.class.getResource("/view/loop1.png")));
		btnFullScrSong.setFocusTraversalKeysEnabled(false);
		btnFullScrSong.setFocusPainted(false);
		btnFullScrSong.setContentAreaFilled(false);
		btnFullScrSong.setBorderPainted(false);
		btnFullScrSong.setBackground(Color.BLACK);
		panelControlsMid.add(btnFullScrSong);
		
		pbVolume = new RoundedProgressBar(5);
		sl_panelControlsMid.putConstraint(SpringLayout.WEST,  pbVolume, -85, SpringLayout.WEST, btnFullScrSong);
		sl_panelControlsMid.putConstraint(SpringLayout.EAST, pbVolume, 0, SpringLayout.WEST, btnFullScrSong);
		sl_panelControlsMid.putConstraint(SpringLayout.NORTH, pbVolume, 17, SpringLayout.NORTH, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.SOUTH, pbVolume, 23, SpringLayout.NORTH, panelControlsMid);
		pbVolume.setForeground(new Color(128, 128, 128));
		pbVolume.setBorder(null);
		pbVolume.setBorderPainted(false);
		pbVolume.setBackground(new Color(128, 128, 128));
		panelControlsMid.add(pbVolume);
		
		btnVolume = new JButton("");
		sl_panelControlsMid.putConstraint(SpringLayout.NORTH, btnVolume, 10, SpringLayout.NORTH, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.WEST,  btnVolume, -35, SpringLayout.EAST, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.EAST, btnVolume, 0, SpringLayout.EAST, panelControlsMid);
		btnVolume.setIcon(new ImageIcon(ViewClient.class.getResource("/view/loop1.png")));
		btnVolume.setFocusTraversalKeysEnabled(false);
		btnVolume.setFocusPainted(false);
		btnVolume.setContentAreaFilled(false);
		btnVolume.setBorderPainted(false);
		btnVolume.setBackground(Color.BLACK);
		panelControlsMid.add(btnVolume);
		
		btnFullScrSong = new JButton("");
		sl_panelControlsMid.putConstraint(SpringLayout.NORTH, btnFullScrSong, 10, SpringLayout.NORTH, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.WEST,  btnFullScrSong, -35, SpringLayout.EAST, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.EAST, btnFullScrSong, 0, SpringLayout.EAST, panelControlsMid);
		btnFullScrSong.setIcon(new ImageIcon(ViewClient.class.getResource("/view/loop1.png")));
		btnFullScrSong.setFocusTraversalKeysEnabled(false);
		btnFullScrSong.setFocusPainted(false);
		btnFullScrSong.setContentAreaFilled(false);
		btnFullScrSong.setBorderPainted(false);
		btnFullScrSong.setBackground(Color.BLACK);
		panelControlsMid.add(btnFullScrSong);
		
		btnFullScrSong = new JButton("");
		sl_panelControlsMid.putConstraint(SpringLayout.NORTH, btnFullScrSong, 10, SpringLayout.NORTH, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.WEST,  btnFullScrSong, -35, SpringLayout.EAST, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.EAST, btnFullScrSong, 0, SpringLayout.EAST, panelControlsMid);
		btnFullScrSong.setIcon(new ImageIcon(ViewClient.class.getResource("/view/loop1.png")));
		btnFullScrSong.setFocusTraversalKeysEnabled(false);
		btnFullScrSong.setFocusPainted(false);
		btnFullScrSong.setContentAreaFilled(false);
		btnFullScrSong.setBorderPainted(false);
		btnFullScrSong.setBackground(Color.BLACK);
		panelControlsMid.add(btnFullScrSong);
		
		btnFullScrSong = new JButton("");
		sl_panelControlsMid.putConstraint(SpringLayout.NORTH, btnFullScrSong, 10, SpringLayout.NORTH, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.WEST,  btnFullScrSong, -35, SpringLayout.EAST, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.EAST, btnFullScrSong, 0, SpringLayout.EAST, panelControlsMid);
		btnFullScrSong.setIcon(new ImageIcon(ViewClient.class.getResource("/view/loop1.png")));
		btnFullScrSong.setFocusTraversalKeysEnabled(false);
		btnFullScrSong.setFocusPainted(false);
		btnFullScrSong.setContentAreaFilled(false);
		btnFullScrSong.setBorderPainted(false);
		btnFullScrSong.setBackground(Color.BLACK);
		panelControlsMid.add(btnFullScrSong);
		
		btnFullScrSong = new JButton("");
		sl_panelControlsMid.putConstraint(SpringLayout.NORTH, btnFullScrSong, 10, SpringLayout.NORTH, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.WEST,  btnFullScrSong, -35, SpringLayout.EAST, panelControlsMid);
		sl_panelControlsMid.putConstraint(SpringLayout.EAST, btnFullScrSong, 0, SpringLayout.EAST, panelControlsMid);
		btnFullScrSong.setIcon(new ImageIcon(ViewClient.class.getResource("/view/loop1.png")));
		btnFullScrSong.setFocusTraversalKeysEnabled(false);
		btnFullScrSong.setFocusPainted(false);
		btnFullScrSong.setContentAreaFilled(false);
		btnFullScrSong.setBorderPainted(false);
		btnFullScrSong.setBackground(Color.BLACK);
		panelControlsMid.add(btnFullScrSong);

//
		

	}

	// Method to configure common button properties
	private static void configureButton(JButton button) {
		button.setFont(new Font("Tahoma", Font.PLAIN, 17));
		button.setBackground(new Color(0, 0, 0));
		button.setForeground(new Color(234, 234, 234));
		button.setBorderPainted(false);
	}
	
	// Method to rotate the image
	private ImageIcon rotateImage(Image image, double angle) {
	    int width = image.getWidth(null);
	    int height = image.getHeight(null);

	    BufferedImage bufferedImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
	    Graphics2D g2d = bufferedImage.createGraphics();

	    AffineTransform transform = new AffineTransform();
	    transform.translate(width / 2, height / 2);
	    transform.rotate(angle);
	    transform.translate(-width / 2, -height / 2);

	    g2d.drawImage(image, transform, null);
	    g2d.dispose();

	    return new ImageIcon(bufferedImage);
	}
	
	  

}
