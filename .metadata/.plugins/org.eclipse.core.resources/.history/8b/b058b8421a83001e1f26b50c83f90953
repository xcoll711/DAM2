package almacenes;

import java.util.Random;

public class Cliente implements Runnable {

    private static final int MAX_INTENTOS = 10;

    private Puerta puerta;
    private Almacen almacen;
    private String nombre;
    private Random esperaRandom;

    public Cliente(Puerta puerta, Almacen almacen, String nombre) {
        this.puerta = puerta;
        this.almacen = almacen;
        this.nombre = nombre;
        this.esperaRandom = new Random();
    }

 

    @Override
    public void run() {
        for (int intento = 0; intento <= MAX_INTENTOS; intento++) {
            if (!puerta.estaOcupada() && puerta.intentarEntrar()) {
               
            	try {
					Thread.sleep(esperaRandom.nextInt(200));
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            	
                puerta.liberarPuerta();
                if (almacen.cogerProducto()) {
                    System.out.println(this.nombre + " COGIÓ UN PRODUCTO!\n");
                    return;
                } else {
                    System.out.println(this.nombre + " ha pasado por la puerta pero no ha cogido nada ");
                    return;
                }
            } else {
            	
            	//Tendremos que usar un Sleep para que los demás clientes tengan alguna oportunidad 
            	try {
					Thread.sleep(esperaRandom.nextInt(1));
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
            }
        }
        System.out.println(this.nombre + " no ha entrado.");

    }
}
